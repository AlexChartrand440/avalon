.TH "md__home_dano_git_avalon_sdk_TestingContracts" 3 "Wed May 6 2020" "Version 0.5.0.dev1" "Hyperledger Avalon" \" -*- nroff -*-
.ad l
.nh
.SH NAME
md__home_dano_git_avalon_sdk_TestingContractsSolidity Connector Test Process 
 \- 
.IP "1." 4
You have two choices for building Avalon: Docker-based build (recommended) or standalone build\&.
.IP "  \(bu" 4
For standalone builds, follow instructions in the 'Standalone based Build' section of the the \fCbuild document\fP\&. Then continue with the next step, step 2\&.
.IP "  \(bu" 4
For Docker-based builds, follow instructions in the 'Docker-based Build and Execution' section of the the \fCbuild document\fP through step 4 (Docker container shell)\&. Then continue with step 8, below\&.
.PP

.IP "2." 4
(Standalone builds only) If needed, update the Ethereum account and direct registry contract information in \fCsdk/avalon_sdk/tcf_connector\&.toml\fP
.IP "3." 4
(Standalone builds only) Install Python 3\&.6\&.8 if not currently installed\&. Determine your Python version with \fCpython3 --version\fP \&. If it is not installed, install it as follows:
.PP
```bash wget https://www.python.org/ftp/python/3.6.8/Python-3.6.8.tgz tar -xvf Python-3\&.6\&.8\&.tgz cd Python-3\&.6\&.8 \&./configure make sudo make install make sure ```
.IP "4." 4
(Standalone builds only) Install the Solidity compiler to compile Solidity contracts from Python: ```bash pip3 install --upgrade py-solc-x python3 -m solcx\&.install v0\&.5\&.15 ```
.IP "5." 4
(Standalone builds only) To run smart contracts using a Ropsten network account, first install the MetaMask Chrome plugin to your Chrome web browser and create an account in the Ropsten network
.IP "6." 4
(Standalone builds only) After creating an account, make sure to add fake ether to the account using:
.IP "  \(bu" 4
https://faucet.metamask.io/
.IP "  \(bu" 4
https://blog.bankex.org/how-to-buy-ethereum-using-metamask-ccea0703daec
.PP

.IP "7." 4
Install web3\&.py, which is an Ethereum Python client that interacts with the Ethereum network\&. For more information about web3\&.py, see https://web3py.readthedocs.io/en/stable/quickstart.html
.PP
```bash pip install web3 ```
.IP "8." 4
Run \fCcd $TCF_HOME/examples/common/python/connectors/ethereum\fP
.IP "9." 4
Fill in your Ropsten testnet address in \fCeth_account\fP in \fCsdk/avalon_sdk/tcf_connector\&.toml\fP
.IP "10." 4
Deploy solidity contracts to Ropsten network using \fCeth_cli\&.py\fP
.PP
```bash \&./eth_cli\&.py ```
.PP
The above command will display the contract instance address for \fCdirect_registry_contract_address\fP and \fCworker_registry_contract_address\fP
.IP "11." 4
Fill in your your contract addresses \fCdirect_registry_contract_address\fP and \fCworker_registry_contract_address\fP in \fCsdk/avalon_sdk/tcf_connector\&.toml\fP
.IP "12." 4
Test the DirectRegistry and WorkerRegistry contracts with: ```bash cd $TCF_HOME/examples/common/python/connectors/ethereum/unit_tests python3 test_ethereum_worker_registry_impl\&.py python3 test_ethereum_worker_registry_list_impl\&.py ```
.IP "13." 4
Test echo client with direct mode using Ropsten test network\&. ```bash cd $TCF_HOME/examples/apps/echo/client \&./echo_client\&.py -m 'Hello world' ``` 
.PP

