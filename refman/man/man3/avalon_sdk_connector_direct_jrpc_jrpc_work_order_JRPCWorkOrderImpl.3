.TH "avalon_sdk.connector.direct.jrpc.jrpc_work_order.JRPCWorkOrderImpl" 3 "Wed May 6 2020" "Version 0.5.0.dev1" "Hyperledger Avalon" \" -*- nroff -*-
.ad l
.nh
.SH NAME
avalon_sdk.connector.direct.jrpc.jrpc_work_order.JRPCWorkOrderImpl
.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBavalon_sdk\&.connector\&.interfaces\&.work_order\&.WorkOrder\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "def \fB__init__\fP (self, config)"
.br
.ti -1c
.RI "def \fBwork_order_submit\fP (self, work_order_id, worker_id, requester_id, work_order_request, id=None)"
.br
.ti -1c
.RI "def \fBwork_order_get_result_nonblocking\fP (self, work_order_id, id=None)"
.br
.ti -1c
.RI "def \fBwork_order_get_result\fP (self, work_order_id, id=None)"
.br
.ti -1c
.RI "def \fBencryption_key_get\fP (self, worker_id, requester_id, last_used_key_nonce=None, tag=None, signature_nonce=None, signature=None, id=None)"
.br
.ti -1c
.RI "def \fBencryption_key_set\fP (self, worker_id, encryption_key, encryption_nonce, tag, signature_nonce, signature, id=None)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.PP
.nf
This class is for to manage to the work orders from client side.

.fi
.PP
 
.SH "Member Function Documentation"
.PP 
.SS "def avalon_sdk\&.connector\&.direct\&.jrpc\&.jrpc_work_order\&.JRPCWorkOrderImpl\&.encryption_key_get ( self,  worker_id,  requester_id,  last_used_key_nonce = \fCNone\fP,  tag = \fCNone\fP,  signature_nonce = \fCNone\fP,  signature = \fCNone\fP,  id = \fCNone\fP)"

.PP
.nf
API to receive a worker's key.

Parameters:
worker_id           Worker ID of the worker whose encryption key
            is requested
last_used_key_nonce Optional nonce associated with the last retrieved
            key. If it is provided, the key retrieved should
            be newer than this one.
            Otherwise any key can be retrieved
tag                 Tag that should be associated with the returned
            key, e.g. the requester ID. This is an optional
            parameter. If it is not provided, requester_id is
            used as a key
requester_id        ID of the requester that plans to use
            the returned key to submit one or more work orders
            using this key
signature_nonce     Optional nonce associated with the signature and
            is used only if signature below is also provided
signature           Optional signature of worker_id,
            last_used_key_nonce, tag, and signature_nonce.
id                  Optional JSON RPC request ID

.fi
.PP
 
.SS "def avalon_sdk\&.connector\&.direct\&.jrpc\&.jrpc_work_order\&.JRPCWorkOrderImpl\&.encryption_key_set ( self,  worker_id,  encryption_key,  encryption_nonce,  tag,  signature_nonce,  signature,  id = \fCNone\fP)"

.PP
.nf
API called by a Worker or Worker Service to receive a Worker's key.

Parameters:
worker_id        ID of the worker to set an encryption key
encryption_key   Encryption key to set
encryption_nonce Nonce associated with the key
tag              Tag that should be associated with the returned key,
         e.g. requester ID.
signature_nonce  Nonce associated with the signature
signature        Signature generated by the worker on the worker_id,
         tag and encryption_nonce
id               Optional JSON RPC request ID

Returns:
JRPC response with the result of the operation.

.fi
.PP
 
.SS "def avalon_sdk\&.connector\&.direct\&.jrpc\&.jrpc_work_order\&.JRPCWorkOrderImpl\&.work_order_get_result ( self,  work_order_id,  id = \fCNone\fP)"

.PP
.nf
Get the work order result in a blocking way until it gets a
result or error.

Parameters:
work_order_id     Work order ID
id                Optional JSON RPC request ID

Returns:
JSON RPC response of dictionary type

.fi
.PP
 
.SS "def avalon_sdk\&.connector\&.direct\&.jrpc\&.jrpc_work_order\&.JRPCWorkOrderImpl\&.work_order_get_result_nonblocking ( self,  work_order_id,  id = \fCNone\fP)"

.PP
.nf
Get the work order result in non-blocking way.

Parameters:
work_order_id     Work order ID
id                Optional JSON RPC request ID

Returns:
JSON RPC response of dictionary type

.fi
.PP
 
.SS "def avalon_sdk\&.connector\&.direct\&.jrpc\&.jrpc_work_order\&.JRPCWorkOrderImpl\&.work_order_submit ( self,  work_order_id,  worker_id,  requester_id,  work_order_request,  id = \fCNone\fP)"

.PP
.nf
Submit a work order request to an Avalon listener.

Parameters:
work_order_id     Work order ID
worker_id         Worker ID value derived from the worker's DID
requester_id      Requester ID
work_order_request Work order request in JSON RPC string format
id                Optional JSON RPC request ID

.fi
.PP
 

.SH "Author"
.PP 
Generated automatically by Doxygen for Hyperledger Avalon from the source code\&.
