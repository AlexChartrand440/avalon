.TH "/home/dano/git/avalon/common/cpp/crypto/crypto_utils.h" 3 "Wed May 6 2020" "Version 0.5.0.dev1" "Hyperledger Avalon" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/dano/git/avalon/common/cpp/crypto/crypto_utils.h
.SH SYNOPSIS
.br
.PP
\fC#include <vector>\fP
.br
\fC#include 'types\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "\fBByteArray\fP \fBtcf::crypto::ComputeMessageHash\fP (const \fBByteArray\fP &message)"
.br
.ti -1c
.RI "\fBByteArray\fP \fBtcf::crypto::RandomBitString\fP (size_t length)"
.br
.ti -1c
.RI "std::string \fBtcf::crypto::CreateHexEncodedEncryptionKey\fP ()"
.br
.ti -1c
.RI "std::string \fBtcf::crypto::DecryptData\fP (std::string cipher, std::string key)"
.br
.ti -1c
.RI "std::string \fBtcf::crypto::EncryptData\fP (std::string msg, std::string key)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Avalon Crypto Utilities: hashing, base 64 conversion, random number generation, key generation, encrypt, and decrypt\&. 
.SH "Function Documentation"
.PP 
.SS "\fBByteArray\fP tcf::crypto::ComputeMessageHash (const \fBByteArray\fP & message)"
SHA256 hashing\&.
.PP
Compute SHA256 hash of message\&.data()\&. Returns ByteArray containing raw binary data\&. 
.SS "std::string tcf::crypto::CreateHexEncodedEncryptionKey ()"
Create symmetric encryption key and return hex encoded key string\&.
.PP
Create symmetric encryption key and return hex encoded key string\&. Uses AES-GCM 256, which also includes authentication\&. Key generated is 256 bits represented as a 64 hex digit printable string\&. Key for use with \fBEncryptData()\fP and \fBDecryptData()\fP\&. 
.SS "std::string tcf::crypto::DecryptData (std::string cipher, std::string key)"
Decrypt cipher using given encryption key and return message\&.
.PP
Decrypt cipher using given encryption key and return message\&. Uses AES-GCM 256, which also includes authentication\&. Use symmetric encryption key generated by \fBCreateHexEncodedEncryptionKey()\fP\&. Implemented using \fBpcrypto::skenc::DecryptMessage()\fP\&. 
.SS "std::string tcf::crypto::EncryptData (std::string msg, std::string key)"
Encrypt the message using given encryption key and return cipher\&.
.PP
Encrypt the message using given encryption key and return cipher\&. Uses AES-GCM 256, which also includes authentication\&. Use symmetric encryption key generated by \fBCreateHexEncodedEncryptionKey()\fP\&. Implemented using \fBpcrypto::skenc::EncryptMessage()\fP\&. 
.SS "\fBByteArray\fP tcf::crypto::RandomBitString (size_t length)"
Generate a cryptographically strong random bitstring\&.
.PP
Generate a cryptographically strong random bit string\&. Throws: RuntimeError\&. 
.SH "Author"
.PP 
Generated automatically by Doxygen for Hyperledger Avalon from the source code\&.
