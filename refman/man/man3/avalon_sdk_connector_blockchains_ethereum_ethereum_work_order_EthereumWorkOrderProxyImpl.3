.TH "avalon_sdk.connector.blockchains.ethereum.ethereum_work_order.EthereumWorkOrderProxyImpl" 3 "Wed May 6 2020" "Version 0.5.0.dev1" "Hyperledger Avalon" \" -*- nroff -*-
.ad l
.nh
.SH NAME
avalon_sdk.connector.blockchains.ethereum.ethereum_work_order.EthereumWorkOrderProxyImpl
.SH SYNOPSIS
.br
.PP
.PP
Inherits WorkOrderProxy\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "def \fB__init__\fP (self, config)"
.br
.ti -1c
.RI "def \fBwork_order_submit\fP (self, work_order_id, worker_id, requester_id, work_order_request, id=None)"
.br
.ti -1c
.RI "def \fBwork_order_complete\fP (self, work_order_id, work_order_response)"
.br
.ti -1c
.RI "def \fBwork_order_get_result\fP (self, work_order_id, id=None)"
.br
.ti -1c
.RI "def \fBencryption_key_retrieve\fP (self, worker_id, last_used_key_nonce, tag, requester_id, signature_nonce=None, signature=None, id=None)"
.br
.ti -1c
.RI "def \fBencryption_key_start\fP (self, tag, id=None)"
.br
.ti -1c
.RI "def \fBencryption_key_set\fP (self, worker_id, encryption_key, encryption_nonce, tag, signature, id=None)"
.br
.ti -1c
.RI "def \fBencryption_key_get\fP (self, worker_id, requester_id, last_used_key_nonce=None, tag=None, signature_nonce=None, signature=None, id=None)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.PP
.nf
This class is meant to write work order-related data to the Ethereum
blockchain.
Detailed method descriptions are available in the interfaces.

.fi
.PP
 
.SH "Member Function Documentation"
.PP 
.SS "def avalon_sdk\&.connector\&.blockchains\&.ethereum\&.ethereum_work_order\&.EthereumWorkOrderProxyImpl\&.encryption_key_get ( self,  worker_id,  requester_id,  last_used_key_nonce = \fCNone\fP,  tag = \fCNone\fP,  signature_nonce = \fCNone\fP,  signature = \fCNone\fP,  id = \fCNone\fP)"

.PP
.nf
Get Encryption Key Request Payload.
Not supported for Ethereum.

.fi
.PP
 
.SS "def avalon_sdk\&.connector\&.blockchains\&.ethereum\&.ethereum_work_order\&.EthereumWorkOrderProxyImpl\&.encryption_key_retrieve ( self,  worker_id,  last_used_key_nonce,  tag,  requester_id,  signature_nonce = \fCNone\fP,  signature = \fCNone\fP,  id = \fCNone\fP)"

.PP
.nf
Get Encryption Key Request Payload.
Not supported for Ethereum.

.fi
.PP
 
.SS "def avalon_sdk\&.connector\&.blockchains\&.ethereum\&.ethereum_work_order\&.EthereumWorkOrderProxyImpl\&.encryption_key_set ( self,  worker_id,  encryption_key,  encryption_nonce,  tag,  signature,  id = \fCNone\fP)"

.PP
.nf
Set Encryption Key Request Payload.
Not supported for Ethereum.

.fi
.PP
 
.SS "def avalon_sdk\&.connector\&.blockchains\&.ethereum\&.ethereum_work_order\&.EthereumWorkOrderProxyImpl\&.encryption_key_start ( self,  tag,  id = \fCNone\fP)"

.PP
.nf
Inform the Worker that it should start
encryption key generation for this requester.
Not supported for Ethereum.

.fi
.PP
 
.SS "def avalon_sdk\&.connector\&.blockchains\&.ethereum\&.ethereum_work_order\&.EthereumWorkOrderProxyImpl\&.work_order_complete ( self,  work_order_id,  work_order_response)"

.PP
.nf
This function is called by the Worker Service to
complete a work order successfully or in error.
This API is for the proxy model.

Parameters:
work_order_id       Unique ID to identify the work order request
work_order_response Work order response data in a string

Returns:
errorCode           0 on success or non-zero on error.

.fi
.PP
 
.SS "def avalon_sdk\&.connector\&.blockchains\&.ethereum\&.ethereum_work_order\&.EthereumWorkOrderProxyImpl\&.work_order_get_result ( self,  work_order_id,  id = \fCNone\fP)"

.PP
.nf
Query blockchain to get a work order result.
This function starts an event handler for handling the
workOrderCompleted event from the Ethereum blockchain.

Parameters:
work_order_id Work Order ID that was sent in the
      corresponding work_order_submit request
id            Optional JSON RPC request ID

Returns:
Tuple containing work order status, worker id, work order request,
work order response, and error code.
None on error.

.fi
.PP
 
.SS "def avalon_sdk\&.connector\&.blockchains\&.ethereum\&.ethereum_work_order\&.EthereumWorkOrderProxyImpl\&.work_order_submit ( self,  work_order_id,  worker_id,  requester_id,  work_order_request,  id = \fCNone\fP)"

.PP
.nf
Submit work order request to the Ethereum block chain.

Parameters:
work_order_id      Unique ID of the work order request
worker_id          Identifier for the worker
requester_id       Unique id to identify the requester
work_order_request JSON RPC string work order request.
           Complete definition at work_order.py and
           defined in EEA specification 6.1.1.
id                 Optional JSON RPC request ID

Returns:
0 on success and non-zero on error.

.fi
.PP
 

.SH "Author"
.PP 
Generated automatically by Doxygen for Hyperledger Avalon from the source code\&.
