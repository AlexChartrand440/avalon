.TH "avalon_sdk.connector.blockchains.fabric.fabric_worker_registry.FabricWorkerRegistryImpl" 3 "Wed May 6 2020" "Version 0.5.0.dev1" "Hyperledger Avalon" \" -*- nroff -*-
.ad l
.nh
.SH NAME
avalon_sdk.connector.blockchains.fabric.fabric_worker_registry.FabricWorkerRegistryImpl
.SH SYNOPSIS
.br
.PP
.PP
Inherits WorkerRegistry\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "def \fB__init__\fP (self, config)"
.br
.ti -1c
.RI "def \fBworker_lookup\fP (self, worker_type=None, org_id=None, application_id=None, id=None)"
.br
.ti -1c
.RI "def \fBworker_retrieve\fP (self, worker_id, id=None)"
.br
.ti -1c
.RI "def \fBworker_lookup_next\fP (self, worker_type, org_id, application_id, lookup_tag, id=None)"
.br
.ti -1c
.RI "def \fBworker_register\fP (self, worker_id, worker_type, org_id, application_ids, details, id=None)"
.br
.ti -1c
.RI "def \fBworker_set_status\fP (self, worker_id, status, id=None)"
.br
.ti -1c
.RI "def \fBworker_update\fP (self, worker_id, details, id=None)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBCHAIN_CODE\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.PP
.nf
This class provide worker APIs which interact with the
Hyperledger Fabric blockchain.
Detailed method descriptions are available in the WorkerRegistry
interface.

.fi
.PP
 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "def avalon_sdk\&.connector\&.blockchains\&.fabric\&.fabric_worker_registry\&.FabricWorkerRegistryImpl\&.__init__ ( self,  config)"

.PP
.nf
Parameters:
config    Dictionary containing Fabric-specific parameters

.fi
.PP
 
.SH "Member Function Documentation"
.PP 
.SS "def avalon_sdk\&.connector\&.blockchains\&.fabric\&.fabric_worker_registry\&.FabricWorkerRegistryImpl\&.worker_lookup ( self,  worker_type = \fCNone\fP,  org_id = \fCNone\fP,  application_id = \fCNone\fP,  id = \fCNone\fP)"

.PP
.nf
Lookup a worker identified worker_type, org_id, and application_id.
All fields are optional and, if present, condition should match for
all fields. If none are passed it should return all workers.

If the list is too large to fit into a single response (the maximum
number of entries in a single response is implementation specific),
the smart contract should return the first batch of the results
and provide a lookup_tag that can be used by the caller to
retrieve the next batch by calling worker_lookup_next.

Parameters:
worker_type         Optional characteristic of workers for which
            you may wish to search
org_id              Optional organization ID to which a worker belongs
application_id      Optional application type ID that is
            supported by the worker
id                  Optional JSON RPC request ID

Returns:
Tuple containing workers count, lookup tag, and list of
worker IDs:
total_count Total number of entries matching a specified
    lookup criteria. If this number is larger than the
    size of the IDs array, the caller should use
    lookupTag to call worker_lookup_next to retrieve
    the rest of the IDs
lookup_tag  Optional parameter. If it is returned, it means
    that there are more matching worker IDs, which can then
    be retrieved by calling function worker_lookup_next
    with this tag as an input parameter
ids         Array of the worker IDs that match the input parameters

On error returns None.

.fi
.PP
 
.SS "def avalon_sdk\&.connector\&.blockchains\&.fabric\&.fabric_worker_registry\&.FabricWorkerRegistryImpl\&.worker_lookup_next ( self,  worker_type,  org_id,  application_id,  lookup_tag,  id = \fCNone\fP)"

.PP
.nf
Retrieve additional worker lookup results after calling worker_lookup.

Parameters:
worker_type         Characteristic of Workers for which you may wish
            to search.
org_id              Organization ID to which a worker belongs
application_id      Optional application type ID that is
            supported by the worker
lookup_tag          is returned by a previous call to either this
            function or to worker_lookup
id                  Optional Optional JSON RPC request ID

Returns:
Tuple containing the following:
total_count    Total number of entries matching this lookup
       criteria.  If this number is larger than the number
       of IDs returned so far, the caller should use
       lookupTag to call worker_lookup_next to retrieve
       the rest of the IDs
new_lookup_tag Optional parameter. If it is returned, it
       means that there are more matching worker IDs that
       can be retrieved by calling this function again with
       this tag as an input parameter
ids            Array of the worker IDs that match the input parameters

On error returns None.

.fi
.PP
 
.SS "def avalon_sdk\&.connector\&.blockchains\&.fabric\&.fabric_worker_registry\&.FabricWorkerRegistryImpl\&.worker_register ( self,  worker_id,  worker_type,  org_id,  application_ids,  details,  id = \fCNone\fP)"

.PP
.nf
Register a new worker with details of the worker.

Parameters:
worker_id       Worker ID value. E.g., a Fabric address
worker_type     Type of Worker. Currently defined types are:
        * "TEE-SGX": an Intel SGX Trusted Execution
          Environment
        * "MPC": Multi-Party Compute
        * "ZK": Zero-Knowledge
org_id          Optional parameter representing the
        organization that hosts the Worker,
        e.g. a bank in the consortium or
        anonymous entity
application_ids Optional parameter that defines
        application types supported by the Worker
details         Detailed information about the worker in
        JSON RPC format as defined in
https://entethalliance.github.io/trusted-computing/spec.html
#common-data-for-all-worker-types
id              Optional Optional JSON RPC request ID

Returns:
ContractResponse.SUCCESS on success or
ContractResponse.ERROR on error.

.fi
.PP
 
.SS "def avalon_sdk\&.connector\&.blockchains\&.fabric\&.fabric_worker_registry\&.FabricWorkerRegistryImpl\&.worker_retrieve ( self,  worker_id,  id = \fCNone\fP)"

.PP
.nf
Retrieve the worker identified by worker ID.

Parameters:
worker_id  Worker ID of the registry whose details are requested
id         Optional Optional JSON RPC request ID

Returns:
Tuple containing worker status (defined in worker_set_status),
worker type, organization ID, list of application IDs, and worker
details (JSON RPC string).

On error returns None.

.fi
.PP
 
.SS "def avalon_sdk\&.connector\&.blockchains\&.fabric\&.fabric_worker_registry\&.FabricWorkerRegistryImpl\&.worker_set_status ( self,  worker_id,  status,  id = \fCNone\fP)"

.PP
.nf
Set the registry status identified by worker ID

Parameters:
worker_id Worker ID value. E.g., a Fabric address
status    Worker status. The currently defined values are:
  1 - worker is active
  2 - worker is temporarily "off-line"
  3 - worker is decommissioned
  4 - worker is compromised
id        Optional Optional JSON RPC request ID

Returns:
ContractResponse.SUCCESS on success
or ContractResponse.ERROR on error.

.fi
.PP
 
.SS "def avalon_sdk\&.connector\&.blockchains\&.fabric\&.fabric_worker_registry\&.FabricWorkerRegistryImpl\&.worker_update ( self,  worker_id,  details,  id = \fCNone\fP)"

.PP
.nf
Update a worker with details data.

Parameters:
worker_id  Worker ID, e.g. a Fabric address
details    Detailed information about the worker in JSON format
id         Optional Optional JSON RPC request ID

Returns:
ContractResponse.SUCCESS on success
or ContractResponse.ERROR on error.

.fi
.PP
 

.SH "Author"
.PP 
Generated automatically by Doxygen for Hyperledger Avalon from the source code\&.
