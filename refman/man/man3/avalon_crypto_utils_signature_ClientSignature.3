.TH "avalon_crypto_utils.signature.ClientSignature" 3 "Wed May 6 2020" "Version 0.5.0.dev1" "Hyperledger Avalon" \" -*- nroff -*-
.ad l
.nh
.SH NAME
avalon_crypto_utils.signature.ClientSignature
.SH SYNOPSIS
.br
.PP
.PP
Inherits object\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "def \fB__init__\fP (self)"
.br
.ti -1c
.RI "def \fBcalculate_datahash\fP (self, data_objects)"
.br
.ti -1c
.RI "def \fBgenerate_signature\fP (self, hash, private_key)"
.br
.ti -1c
.RI "def \fBgenerate_client_signature\fP (self, input_json_str, worker, private_key, session_key, session_iv, encrypted_session_key, data_key=None, data_iv=None)"
.br
.ti -1c
.RI "def \fBverify_signature\fP (self, input_json, verification_key)"
.br
.ti -1c
.RI "def \fBverify_update_receipt_signature\fP (self, input_json)"
.br
.ti -1c
.RI "def \fBverify_create_receipt_signature\fP (self, input_json)"
.br
.ti -1c
.RI "def \fBcalculate_request_hash\fP (self, input_json)"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBprivate_key\fP"
.br
.ti -1c
.RI "\fBpublic_key\fP"
.br
.ti -1c
.RI "\fBparam_pool\fP"
.br
.ti -1c
.RI "\fBtcs_worker\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.PP
.nf
Class to perform hash calculation, signature generation and verification

.fi
.PP
 
.SH "Member Function Documentation"
.PP 
.SS "def avalon_crypto_utils\&.signature\&.ClientSignature\&.calculate_datahash ( self,  data_objects)"

.PP
.nf
Function to calculate a hash value of the array concatenating dataHash,
data, encryptedDataEncryptionKey, iv for each item in the
inData/outData array
Parameters:
    - data_objects is each item in inData or outData part of workorder
      request as per Trusted Compute EEA API 6.1.7
      Work Order Data Formats

.fi
.PP
 
.SS "def avalon_crypto_utils\&.signature\&.ClientSignature\&.calculate_request_hash ( self,  input_json)"

.PP
.nf
Function to create the work order reuest hash
as defined in EEA spec 6.1.8.1
Parameters:
    - input_json is dictionary contains work order request payload
      as define EEA spec 6.1.1
Returns hash of work order request as string

.fi
.PP
 
.SS "def avalon_crypto_utils\&.signature\&.ClientSignature\&.generate_client_signature ( self,  input_json_str,  worker,  private_key,  session_key,  session_iv,  encrypted_session_key,  data_key = \fCNone\fP,  data_iv = \fCNone\fP)"

.PP
.nf
Function to generate client signature
Parameters:
    - input_json_str is requester Work Order Request payload in a
      JSON-RPC based format defined 6.1.1 Work Order Request Payload
    - worker is a worker object to store all the common details of
      worker as per Trusted Compute EEA API 8.1
      Common Data for All Worker Types
    - private_key is Client private key
    - session_key is one time session key generated by the participant
      submitting the work order.
    - session_iv is an initialization vector if required by the
      data encryption algorithm (encryptedSessionKey).
      The default is all zeros.
    - data_key is a one time key generated by participant used to
      encrypt work order indata
    - data_iv is an initialization vector used along with data_key.
      Default is all zeros.
    - encrypted_session_key is a encrypted version of session_key.
Returns a tuple containing signature and status

.fi
.PP
 
.SS "def avalon_crypto_utils\&.signature\&.ClientSignature\&.generate_signature ( self,  hash,  private_key)"

.PP
.nf
Function to generate signature object
Parameters:
    - hash is the combined array of all hashes calculated on the
      message
    - private_key is Client private key
Returns tuple(status, signature)

.fi
.PP
 
.SS "def avalon_crypto_utils\&.signature\&.ClientSignature\&.verify_create_receipt_signature ( self,  input_json)"

.PP
.nf
Function to verify the signature of work order receipt create
Parameters:
    - input_json is dictionary contains request payload of
      WorkOrderReceiptRetrieve API as define EEA spec 7.2.2
Returns enum type SignatureStatus

.fi
.PP
 
.SS "def avalon_crypto_utils\&.signature\&.ClientSignature\&.verify_signature ( self,  input_json,  verification_key)"

.PP
.nf
Function to verify the signature received from the enclave
Parameters:
    - input_json is dictionary contains payload returned by the
      Worker Service in response to successful workorder submit request
      as per Trusted Compute EEA API 6.1.2 Work Order Result Payload
    - verification_key is ECDSA/SECP256K1 public key used to verify
      signatures created by the Enclave.
Returns enum type SignatureStatus

.fi
.PP
 
.SS "def avalon_crypto_utils\&.signature\&.ClientSignature\&.verify_update_receipt_signature ( self,  input_json)"

.PP
.nf
Function to verify the signature of work order receipt update
Parameters:
    - input_json is dictionary contains payload returned by the
      WorkOrderReceiptUpdateRetrieve API as define EEA spec 7.2.7
Returns enum type SignatureStatus

.fi
.PP
 

.SH "Author"
.PP 
Generated automatically by Doxygen for Hyperledger Avalon from the source code\&.
